<h2>
  Usage
</h2>
<h3>Installation</h3>
<p>
  Mix will automatically prompt you whenever there is a need to use Hex. In case you want to manually install or update hex, simply run <code>$ mix local.hex</code>.
</p>
<h3>Defining dependencies</h3>
<p>
  Hex integrates with Mix's dependency handling. Dependencies are defined
  in Mix's format and all the ordinary Mix dependency commands work.
  In particular, all dependencies without a SCM (<code>:git</code> or <code>:path</code>)
  are automatically handled by Hex. Hex dependencies are defined in the following format:
</p>
<p><code>{:package, requirement}</code></p>
<p>
  The version requirement specify which versions of the package you allow.
  The formats accepted for the requirement are documented in
  the <a href="http://elixir-lang.org/docs/stable/elixir/Version.html">Version module</a>.
  Below is an example <code>mix.exs</code> file.
</p>
<pre>
<code class="elixir">
defmodule MyProject.Mixfile do
  use Mix.Project

  def project do
    [app: :my_project,
     version: "0.0.1",
     elixir: "~> 0.13.0",
     deps: deps()]
  end

  def application, do: []

  defp deps do
    [{:ecto, "~> 0.11.3"},
     {:postgrex, "~> 0.8.1"},
     {:cowboy, github: "extend/cowboy"}]
  end
end
</code>
</pre>

<h3>Fetching dependencies</h3>
<p>
  <code>$ mix deps.get</code> will fetch dependencies that were not
  already fetched. Dependency fetching is repeatable, Mix will
  lock the version of a dependency in the lockfile to ensure that
  all developers will get the same version
  (always commit <code>mix.lock</code> to version control). <code>$ mix deps.update</code>
  will update the dependency and write the updated version to the lockfile.
</p>
<p>
  When Mix tries to fetch Hex packages that are not locked, dependency
  resolution will be performed to find a set of packages that satisfies
  all version requirements. The resolution process will always try to
  use the latest version of all packages. Because of the nature of
  dependency resolution Hex may sometimes fail to find a compatible
  set of dependencies. This can be resolved by unlocking dependencies
  with <code>$ mix deps.unlock</code>, more unlocked dependencies
  give Hex a larger selection of package versions to work with.
</p>
