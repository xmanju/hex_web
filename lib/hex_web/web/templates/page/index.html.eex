<div class="featured-home">
  <div class="container">

    <%= render HexWeb.LayoutView, "_flash.html", conn: @conn %>

    <div class="search-form">
      <h2>The package manager for the Erlang ecosystem</h2>

      <div class="row">
        <div class="col-md-8 col-md-offset-2">
          <%= form_tag(package_path(Endpoint, :index), method: "get", role: "search") do %>
            <div class="input-group">
              <input type="search" autofocus class="form-control" placeholder="Find packages" name="search" id="search" value="<% # search(assigns) %>" tabindex="1">
              <input type="hidden" name="sort" value="downloads">
              <label class="sr-only" for="search">Find packages</label>
              <span class="input-group-btn">
                <button type="submit" class="btn btn-search" tabindex="1">
                  <%= icon(:glyphicon, :search) %>
                </button>
              </span>
            </div>
          <% end %>
        </div>
      </div>
    </div>

    <div class="using-with-box elixir">
      <div class="shadow"></div>
      <div class="text-content clearfix">
        <div class="side-box">
          <div class="lang-symbol"></div>
        </div>
        <div class="instructions">
          <h3><a href="<%= docs_path(Endpoint, :usage) %>">Using with Elixir</a></h3>
          <p>
            Simply specify your Mix dependencies as two-item tuples like <code>{:plug, "~> 1.1.0"}</code> and Elixir will ask if you want to install Hex if you haven't already.
            After installed, you can run <code>$ mix local </code> to see all available Hex tasks and  <code>$ mix help TASK</code> for more information about a specific task.
          </p>
        </div>
      </div>
    </div>

    <div class="using-with-box erlang">
      <div class="shadow"></div>
      <div class="text-content clearfix">
        <div class="side-box">
          <div class="lang-symbol"></div>
        </div>
        <div class="instructions">
          <h3><a href="<%= docs_path(Endpoint, :rebar3_usage) %>">Using with Erlang</a></h3>
          <p>
            Download <a href="https://s3.amazonaws.com/rebar3/rebar3">rebar3</a>, put it in your <code>PATH</code> and give it executable permissions.
            Now you can specify Hex dependencies in your rebar.config like <code>{deps, [hackney]}</code>.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="home-stats">
  <ul class="container">
    <li>
      <%= icon(:octicon, :package, class: "stat-icon stat-icon-package") %>
      <span class="stat-info">
        <span class="count-info">
          <%= human_number_space @num_packages %>
        </span> <br>
        packages <br> available
      </span>
    </li>
    <li>
      <%= icon(:octicon, :versions, class: "stat-icon stat-icon-versions") %>
      <span class="stat-info">
        <span class="count-info">
          <%= human_number_space @num_releases %>
        </span> <br>
        package <br> versions
      </span>
    </li>
    <li>
      <%= icon(:octicon, :calendar, class: "stat-icon stat-icon-calendar") %>
      <span class="stat-info">
        <span class="count-info">
          <%= human_number_space @total["day"] %>
        </span> <br>
        downloads <br> yesterday
      </span>
    </li>
    <li>
      <%= icon(:octicon, :calendar, class: "stat-icon stat-icon-calendar") %>
      <span class="stat-info">
        <span class="count-info">
          <%= human_number_space @total["week"] %>
        </span> <br>
        downloads <br> last 7 days
      </span>
    </li>
    <li>
      <%= icon(:octicon, :calendar, class: "stat-icon stat-icon-calendar") %>
      <span class="stat-info">
        <span class="count-info">
          <%= human_number_space @total["all"] %>
        </span> <br>
        downloads <br> all time
      </span>
    </li>
  </ul>
</div>

<div class="log-body">
  <div class="container">
    <div class="row">
      <div class="col-md-4">
        <h3 class="log-head">Most Downloaded</h3>
        <ul>
          <%= for {package, inserted_at, meta, downloads} <- @package_top do %>
            <%= render_package package: package, downloads: downloads, inserted_at: inserted_at, description: meta.description %>
          <% end %>
        </ul>
      </div>
      <div class="col-md-4">
        <h3 class="log-head">New Packages</h3>
        <ul>
          <%= for {package, inserted_at, %PackageMetadata{} = meta} <- @package_new do %>
            <%= render_package package: package, inserted_at: inserted_at, description: meta.description %>
          <% end %>
        </ul>
      </div>
      <div class="col-md-4">
        <h3 class="log-head">Recently Updated</h3>
        <ul>
          <%= for {package, version, inserted_at, %PackageMetadata{} = meta} <- @releases_new do %>
            <%= render_package version: version, package: package, inserted_at: inserted_at, description: meta.description %>
          <% end %>
        </ul>
      </div>
    </div>
  </div>
</div>
